# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = vortex-client$(EXEEXT)
noinst_PROGRAMS = vortex-listener$(EXEEXT) \
	vortex-simple-listener$(EXEEXT) vortex-simple-client$(EXEEXT) \
	vortex-omr-server$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	vortex-xml-rpc-listener$(EXEEXT) \
	vortex-client-connections$(EXEEXT) \
	vortex-regression-client$(EXEEXT) \
	vortex-regression-listener$(EXEEXT) \
	vortex-server-without-cbs$(EXEEXT) \
	vortex-client-without-cbs$(EXEEXT) \
	vortex-close-listeners$(EXEEXT) \
	vortex-file-transfer-server$(EXEEXT) \
	vortex-file-transfer-client$(EXEEXT) \
	vortex-pull-listener$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(certfilesdir)"
@ENABLE_SASL_SUPPORT_TRUE@am__EXEEXT_1 =  \
@ENABLE_SASL_SUPPORT_TRUE@	vortex-sasl-listener$(EXEEXT)
@ENABLE_TLS_SUPPORT_TRUE@am__EXEEXT_2 = vortex-tls-listener$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_vortex_client_OBJECTS = vortex-client.$(OBJEXT)
vortex_client_OBJECTS = $(am_vortex_client_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
vortex_client_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la $(XML_RPC_SUPPORT_LIBS) \
	$(SASL_SUPPORT_LIBS) $(TLS_SUPPORT_LIBS)
am_vortex_client_connections_OBJECTS =  \
	vortex-client-connections.$(OBJEXT)
vortex_client_connections_OBJECTS =  \
	$(am_vortex_client_connections_OBJECTS)
vortex_client_connections_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la \
	$(top_builddir)/tunnel/libvortex-tunnel-1.1.la
am_vortex_client_without_cbs_OBJECTS =  \
	vortex-client-without-cbs.$(OBJEXT)
vortex_client_without_cbs_OBJECTS =  \
	$(am_vortex_client_without_cbs_OBJECTS)
vortex_client_without_cbs_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_close_listeners_OBJECTS = vortex-close-listeners.$(OBJEXT)
vortex_close_listeners_OBJECTS = $(am_vortex_close_listeners_OBJECTS)
vortex_close_listeners_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_file_transfer_client_OBJECTS =  \
	vortex-file-transfer-client.$(OBJEXT)
vortex_file_transfer_client_OBJECTS =  \
	$(am_vortex_file_transfer_client_OBJECTS)
vortex_file_transfer_client_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_file_transfer_server_OBJECTS =  \
	vortex-file-transfer-server.$(OBJEXT)
vortex_file_transfer_server_OBJECTS =  \
	$(am_vortex_file_transfer_server_OBJECTS)
vortex_file_transfer_server_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_listener_OBJECTS = vortex-listener.$(OBJEXT)
vortex_listener_OBJECTS = $(am_vortex_listener_OBJECTS)
vortex_listener_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_omr_server_OBJECTS = vortex-omr-server.$(OBJEXT)
vortex_omr_server_OBJECTS = $(am_vortex_omr_server_OBJECTS)
vortex_omr_server_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_pull_listener_OBJECTS = vortex-pull-listener.$(OBJEXT)
vortex_pull_listener_OBJECTS = $(am_vortex_pull_listener_OBJECTS)
vortex_pull_listener_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la \
	$(top_builddir)/pull/libvortex-pull-1.1.la
am__vortex_regression_client_SOURCES_DIST =  \
	vortex-regression-client.c vortex-regression-common.c \
	vortex-regression-common.h test_types.h test_xml_rpc.h \
	test_xml_rpc.c test_struct_values_xml_rpc.h \
	test_struct_values_xml_rpc.c test_struct_item_xml_rpc.h \
	test_struct_item_xml_rpc.c test_array_itemarray_xml_rpc.h \
	test_array_itemarray_xml_rpc.c test_struct_node_xml_rpc.h \
	test_struct_node_xml_rpc.c
@ENABLE_XML_RPC_SUPPORT_TRUE@am__objects_1 = test_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.$(OBJEXT)
am_vortex_regression_client_OBJECTS =  \
	vortex-regression-client.$(OBJEXT) \
	vortex-regression-common.$(OBJEXT) $(am__objects_1)
vortex_regression_client_OBJECTS =  \
	$(am_vortex_regression_client_OBJECTS)
vortex_regression_client_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la \
	$(top_builddir)/tunnel/libvortex-tunnel-1.1.la \
	$(top_builddir)/http/libvortex-http-1.1.la \
	$(top_builddir)/alive/libvortex-alive-1.1.la \
	$(top_builddir)/pull/libvortex-pull-1.1.la \
	$(XML_RPC_SUPPORT_LIBS) $(SASL_SUPPORT_LIBS) \
	$(TLS_SUPPORT_LIBS)
am__vortex_regression_listener_SOURCES_DIST =  \
	vortex-regression-listener.c vortex-regression-common.c \
	vortex-regression-common.h service_dispatch.h \
	service_dispatch.c test_sum_int_int.h test_sum_int_int.c \
	test_operate_int_int.h test_operate_int_int.c \
	test_get_the_string.h test_get_the_string.c \
	test_get_the_bool_1.h test_get_the_bool_1.c \
	test_get_the_bool_2.h test_get_the_bool_2.c \
	test_get_double_sum_double_double.h \
	test_get_double_sum_double_double.c \
	test_struct_values_xml_rpc.h test_struct_values_xml_rpc.c \
	test_get_struct_values_values.h \
	test_get_struct_values_values.c test_struct_item_xml_rpc.h \
	test_struct_item_xml_rpc.c test_array_itemarray_xml_rpc.h \
	test_array_itemarray_xml_rpc.c test_get_array.h \
	test_get_array.c test_get_list.h test_get_list.c \
	test_struct_node_xml_rpc.h test_struct_node_xml_rpc.c \
	test_sum2_int_int.h test_sum2_int_int.c
@ENABLE_XML_RPC_SUPPORT_TRUE@am__objects_2 =  \
@ENABLE_XML_RPC_SUPPORT_TRUE@	service_dispatch.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum_int_int.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_operate_int_int.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_string.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_1.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_2.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_double_sum_double_double.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_struct_values_values.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_array.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_list.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.$(OBJEXT) \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum2_int_int.$(OBJEXT)
am_vortex_regression_listener_OBJECTS =  \
	vortex-regression-listener.$(OBJEXT) \
	vortex-regression-common.$(OBJEXT) $(am__objects_2)
vortex_regression_listener_OBJECTS =  \
	$(am_vortex_regression_listener_OBJECTS)
vortex_regression_listener_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la \
	$(top_builddir)/tunnel/libvortex-tunnel-1.1.la \
	$(top_builddir)/pull/libvortex-pull-1.1.la \
	$(top_builddir)/alive/libvortex-alive-1.1.la \
	$(XML_RPC_SUPPORT_LIBS) $(SASL_SUPPORT_LIBS) \
	$(TLS_SUPPORT_LIBS)
am__vortex_sasl_listener_SOURCES_DIST = vortex-sasl-listener.c
@ENABLE_SASL_SUPPORT_TRUE@am_vortex_sasl_listener_OBJECTS =  \
@ENABLE_SASL_SUPPORT_TRUE@	vortex-sasl-listener.$(OBJEXT)
vortex_sasl_listener_OBJECTS = $(am_vortex_sasl_listener_OBJECTS)
@ENABLE_SASL_SUPPORT_TRUE@vortex_sasl_listener_DEPENDENCIES =  \
@ENABLE_SASL_SUPPORT_TRUE@	$(am__DEPENDENCIES_2) \
@ENABLE_SASL_SUPPORT_TRUE@	$(top_builddir)/src/libvortex-1.1.la \
@ENABLE_SASL_SUPPORT_TRUE@	$(SASL_SUPPORT_LIBS) \
@ENABLE_SASL_SUPPORT_TRUE@	$(TLS_SUPPORT_LIBS)
am_vortex_server_without_cbs_OBJECTS =  \
	vortex-server-without-cbs.$(OBJEXT)
vortex_server_without_cbs_OBJECTS =  \
	$(am_vortex_server_without_cbs_OBJECTS)
vortex_server_without_cbs_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_simple_client_OBJECTS = vortex-simple-client.$(OBJEXT)
vortex_simple_client_OBJECTS = $(am_vortex_simple_client_OBJECTS)
vortex_simple_client_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am_vortex_simple_listener_OBJECTS = vortex-simple-listener.$(OBJEXT)
vortex_simple_listener_OBJECTS = $(am_vortex_simple_listener_OBJECTS)
vortex_simple_listener_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la
am__vortex_tls_listener_SOURCES_DIST = vortex-tls-listener.c
@ENABLE_TLS_SUPPORT_TRUE@am_vortex_tls_listener_OBJECTS =  \
@ENABLE_TLS_SUPPORT_TRUE@	vortex-tls-listener.$(OBJEXT)
vortex_tls_listener_OBJECTS = $(am_vortex_tls_listener_OBJECTS)
@ENABLE_TLS_SUPPORT_TRUE@vortex_tls_listener_DEPENDENCIES =  \
@ENABLE_TLS_SUPPORT_TRUE@	$(am__DEPENDENCIES_2) \
@ENABLE_TLS_SUPPORT_TRUE@	$(top_builddir)/src/libvortex-1.1.la \
@ENABLE_TLS_SUPPORT_TRUE@	$(TLS_SUPPORT_LIBS)
am_vortex_xml_rpc_listener_OBJECTS =  \
	vortex-xml-rpc-listener.$(OBJEXT)
vortex_xml_rpc_listener_OBJECTS =  \
	$(am_vortex_xml_rpc_listener_OBJECTS)
vortex_xml_rpc_listener_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(top_builddir)/src/libvortex-1.1.la $(XML_RPC_SUPPORT_LIBS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(vortex_client_SOURCES) \
	$(vortex_client_connections_SOURCES) \
	$(vortex_client_without_cbs_SOURCES) \
	$(vortex_close_listeners_SOURCES) \
	$(vortex_file_transfer_client_SOURCES) \
	$(vortex_file_transfer_server_SOURCES) \
	$(vortex_listener_SOURCES) $(vortex_omr_server_SOURCES) \
	$(vortex_pull_listener_SOURCES) \
	$(vortex_regression_client_SOURCES) \
	$(vortex_regression_listener_SOURCES) \
	$(vortex_sasl_listener_SOURCES) \
	$(vortex_server_without_cbs_SOURCES) \
	$(vortex_simple_client_SOURCES) \
	$(vortex_simple_listener_SOURCES) \
	$(vortex_tls_listener_SOURCES) \
	$(vortex_xml_rpc_listener_SOURCES)
DIST_SOURCES = $(vortex_client_SOURCES) \
	$(vortex_client_connections_SOURCES) \
	$(vortex_client_without_cbs_SOURCES) \
	$(vortex_close_listeners_SOURCES) \
	$(vortex_file_transfer_client_SOURCES) \
	$(vortex_file_transfer_server_SOURCES) \
	$(vortex_listener_SOURCES) $(vortex_omr_server_SOURCES) \
	$(vortex_pull_listener_SOURCES) \
	$(am__vortex_regression_client_SOURCES_DIST) \
	$(am__vortex_regression_listener_SOURCES_DIST) \
	$(am__vortex_sasl_listener_SOURCES_DIST) \
	$(vortex_server_without_cbs_SOURCES) \
	$(vortex_simple_client_SOURCES) \
	$(vortex_simple_listener_SOURCES) \
	$(am__vortex_tls_listener_SOURCES_DIST) \
	$(vortex_xml_rpc_listener_SOURCES)
DATA = $(certfiles_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADDITIONAL_LIBS = @ADDITIONAL_LIBS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AXL_CFLAGS = @AXL_CFLAGS@
AXL_LIBS = @AXL_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXARG_FLAGS = @EXARG_FLAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GSASL_CFLAGS = @GSASL_CFLAGS@
GSASL_LIBS = @GSASL_LIBS@
HAVE_GSASL_FREE = @HAVE_GSASL_FREE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = $(AXL_LIBS) $(PTHREAD_LIBS) $(ADDITIONAL_LIBS)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
READLINE_PATH = @READLINE_PATH@
SASL_CFLAGS = @SASL_CFLAGS@
SASL_LIBS = @SASL_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TLS_LIBS = @TLS_LIBS@
VERSION = @VERSION@
VORTEX_VERSION = @VORTEX_VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
axl_string_version = @axl_string_version@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@ENABLE_POLL_SUPPORT_TRUE@INCLUDE_VORTEX_POLL = -DVORTEX_HAVE_POLL=1
@ENABLE_EPOLL_SUPPORT_TRUE@INCLUDE_VORTEX_EPOLL = -DVORTEX_HAVE_EPOLL=1
@ENABLE_VORTEX_LOG_TRUE@INCLUDE_VORTEX_LOG = -DENABLE_VORTEX_LOG
@ENABLE_TUNNEL_SUPPORT_TRUE@INCLUDE_TUNNEL_SUPPORT = -DENABLE_TUNNEL_SUPPORT
@ENABLE_PULL_SUPPORT_TRUE@INCLUDE_PULL_SUPPORT = -DENABLE_PULL_SUPPORT
@ENABLE_HTTP_SUPPORT_TRUE@INCLUDE_HTTP_SUPPORT = -DENABLE_HTTP_SUPPORT
@ENABLE_XML_RPC_SUPPORT_TRUE@INCLUDE_XML_RPC_SUPPORT = -DENABLE_XML_RPC_SUPPORT
@ENABLE_XML_RPC_SUPPORT_TRUE@XML_RPC_SUPPORT_LIBS = $(top_builddir)/xml-rpc/libvortex-xml-rpc-1.1.la 
@ENABLE_XML_RPC_SUPPORT_TRUE@vortex_regression_listener_xml_rpc_files = service_dispatch.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	service_dispatch.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum_int_int.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum_int_int.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_operate_int_int.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_operate_int_int.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_string.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_string.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_1.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_1.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_2.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_the_bool_2.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_double_sum_double_double.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_double_sum_double_double.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_struct_values_values.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_struct_values_values.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_array.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_array.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_list.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_get_list.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum2_int_int.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_sum2_int_int.c

@ENABLE_XML_RPC_SUPPORT_TRUE@vortex_regression_client_xml_rpc_files = test_types.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_values_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_item_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_array_itemarray_xml_rpc.c \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.h \
@ENABLE_XML_RPC_SUPPORT_TRUE@	test_struct_node_xml_rpc.c

@ENABLE_SASL_SUPPORT_TRUE@INCLUDE_SASL_SUPPORT = -DENABLE_SASL_SUPPORT -I$(top_srcdir)/sasl
@ENABLE_SASL_SUPPORT_TRUE@SASL_SUPPORT_LIBS = $(top_builddir)/sasl/libvortex-sasl-1.1.la 
@ENABLE_SASL_SUPPORT_TRUE@SASL_TESTS = vortex-sasl-listener
@ENABLE_TLS_SUPPORT_TRUE@INCLUDE_TLS_SUPPORT = -DENABLE_TLS_SUPPORT -I$(top_srcdir)/tls
@ENABLE_TLS_SUPPORT_TRUE@TLS_SUPPORT_LIBS = $(top_builddir)/tls/libvortex-tls-1.1.la 
@ENABLE_TLS_SUPPORT_TRUE@TLS_TESTS = vortex-tls-listener
certfilesdir = $(datadir)/libvortex-1.1
certfiles_DATA = test-certificate.pem test-private-key.pem
EXTRA_DIST = Makefile.win $(certfiles_DATA) vortex-regression-client.vcproj  vortex-regression-listener.vcproj vortex-regression-client.idl \
	mime.example.1.txt  mime.example.body.1.txt  mime.example.2.txt  mime.example.3.txt  mime.example.body.2.txt 

INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/tunnel -I$(top_srcdir)/pull -I$(top_srcdir)/alive \
	-I$(top_srcdir)/xml-rpc -I$(top_srcdir)/http $(AXL_CFLAGS)  $(PTHREAD_CFLAGS) \
	-I$(READLINE_PATH)/include -Wall  -Wstrict-prototypes -g -ansi -I/usr/plt/full-5.0.1.2/include -D__axl_disable_broken_bool_def__   \
        -DVERSION=\""$(VORTEX_VERSION)"\" -I$(top_srcdir)/src $(INCLUDE_VORTEX_POLL) $(INCLUDE_VORTEX_EPOLL) $(INCLUDE_VORTEX_LOG) $(INCLUDE_TUNNEL_SUPPORT) $(INCLUDE_PULL_SUPPORT)  $(INCLUDE_XML_RPC_SUPPORT) $(INCLUDE_SASL_SUPPORT) $(INCLUDE_HTTP_SUPPORT) $(INCLUDE_TLS_SUPPORT)

bin_SCRIPTS = prepare_files

# copy files required to run regression test if they are not found (this is required to build
# vortex when sources and build directories are diferent).
vortex_test_files = $(top_srcdir)/test/mime.*.txt \
	     $(top_srcdir)/test/vortex-regression-client.c \
	     $(top_srcdir)/test/vortex-client.c \
	     $(top_srcdir)/test/vortex-regression-listener.c \
	     $(top_srcdir)/test/vortex-sasl-listener.c \
	     $(top_srcdir)/test/test-certificate.pem \
	     $(top_srcdir)/test/test-private-key.pem

vortex_listener_SOURCES = vortex-listener.c
vortex_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la 
vortex_omr_server_SOURCES = vortex-omr-server.c
vortex_omr_server_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
@ENABLE_TLS_SUPPORT_TRUE@vortex_tls_listener_SOURCES = vortex-tls-listener.c
@ENABLE_TLS_SUPPORT_TRUE@vortex_tls_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la $(TLS_SUPPORT_LIBS)
vortex_client_SOURCES = vortex-client.c 
vortex_client_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la -L$(READLINE_PATH)/lib -lreadline $(XML_RPC_SUPPORT_LIBS) $(SASL_SUPPORT_LIBS) $(TLS_SUPPORT_LIBS)
vortex_simple_listener_SOURCES = vortex-simple-listener.c
vortex_simple_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_simple_client_SOURCES = vortex-simple-client.c
vortex_simple_client_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_client_connections_SOURCES = vortex-client-connections.c
vortex_client_connections_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la $(top_builddir)/tunnel/libvortex-tunnel-1.1.la 
vortex_regression_client_SOURCES = \
	vortex-regression-client.c vortex-regression-common.c vortex-regression-common.h $(vortex_regression_client_xml_rpc_files)

vortex_regression_client_LDADD = \
	$(LIBS) $(top_builddir)/src/libvortex-1.1.la  \
	$(top_builddir)/tunnel/libvortex-tunnel-1.1.la \
	$(top_builddir)/http/libvortex-http-1.1.la \
	$(top_builddir)/alive/libvortex-alive-1.1.la \
	$(top_builddir)/pull/libvortex-pull-1.1.la  $(XML_RPC_SUPPORT_LIBS) $(SASL_SUPPORT_LIBS) $(TLS_SUPPORT_LIBS) 

vortex_regression_listener_SOURCES = \
	vortex-regression-listener.c vortex-regression-common.c vortex-regression-common.h $(vortex_regression_listener_xml_rpc_files) 

vortex_regression_listener_LDADD = \
	$(LIBS) $(top_builddir)/src/libvortex-1.1.la \
	$(top_builddir)/tunnel/libvortex-tunnel-1.1.la \
	$(top_builddir)/pull/libvortex-pull-1.1.la \
	$(top_builddir)/alive/libvortex-alive-1.1.la \
	 $(XML_RPC_SUPPORT_LIBS) $(SASL_SUPPORT_LIBS) $(TLS_SUPPORT_LIBS)

vortex_server_without_cbs_SOURCES = vortex-server-without-cbs.c
vortex_server_without_cbs_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_client_without_cbs_SOURCES = vortex-client-without-cbs.c
vortex_client_without_cbs_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_close_listeners_SOURCES = vortex-close-listeners.c
vortex_close_listeners_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la 
@ENABLE_SASL_SUPPORT_TRUE@vortex_sasl_listener_SOURCES = vortex-sasl-listener.c
@ENABLE_SASL_SUPPORT_TRUE@vortex_sasl_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la $(SASL_SUPPORT_LIBS) $(TLS_SUPPORT_LIBS)
vortex_xml_rpc_listener_SOURCES = vortex-xml-rpc-listener.c
vortex_xml_rpc_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la $(XML_RPC_SUPPORT_LIBS)
vortex_file_transfer_server_SOURCES = vortex-file-transfer-server.c
vortex_file_transfer_server_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_file_transfer_client_SOURCES = vortex-file-transfer-client.c
vortex_file_transfer_client_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la
vortex_pull_listener_SOURCES = vortex-pull-listener.c
vortex_pull_listener_LDADD = $(LIBS) $(top_builddir)/src/libvortex-1.1.la $(top_builddir)/pull/libvortex-pull-1.1.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
vortex-client$(EXEEXT): $(vortex_client_OBJECTS) $(vortex_client_DEPENDENCIES) 
	@rm -f vortex-client$(EXEEXT)
	$(LINK) $(vortex_client_OBJECTS) $(vortex_client_LDADD) $(LIBS)
vortex-client-connections$(EXEEXT): $(vortex_client_connections_OBJECTS) $(vortex_client_connections_DEPENDENCIES) 
	@rm -f vortex-client-connections$(EXEEXT)
	$(LINK) $(vortex_client_connections_OBJECTS) $(vortex_client_connections_LDADD) $(LIBS)
vortex-client-without-cbs$(EXEEXT): $(vortex_client_without_cbs_OBJECTS) $(vortex_client_without_cbs_DEPENDENCIES) 
	@rm -f vortex-client-without-cbs$(EXEEXT)
	$(LINK) $(vortex_client_without_cbs_OBJECTS) $(vortex_client_without_cbs_LDADD) $(LIBS)
vortex-close-listeners$(EXEEXT): $(vortex_close_listeners_OBJECTS) $(vortex_close_listeners_DEPENDENCIES) 
	@rm -f vortex-close-listeners$(EXEEXT)
	$(LINK) $(vortex_close_listeners_OBJECTS) $(vortex_close_listeners_LDADD) $(LIBS)
vortex-file-transfer-client$(EXEEXT): $(vortex_file_transfer_client_OBJECTS) $(vortex_file_transfer_client_DEPENDENCIES) 
	@rm -f vortex-file-transfer-client$(EXEEXT)
	$(LINK) $(vortex_file_transfer_client_OBJECTS) $(vortex_file_transfer_client_LDADD) $(LIBS)
vortex-file-transfer-server$(EXEEXT): $(vortex_file_transfer_server_OBJECTS) $(vortex_file_transfer_server_DEPENDENCIES) 
	@rm -f vortex-file-transfer-server$(EXEEXT)
	$(LINK) $(vortex_file_transfer_server_OBJECTS) $(vortex_file_transfer_server_LDADD) $(LIBS)
vortex-listener$(EXEEXT): $(vortex_listener_OBJECTS) $(vortex_listener_DEPENDENCIES) 
	@rm -f vortex-listener$(EXEEXT)
	$(LINK) $(vortex_listener_OBJECTS) $(vortex_listener_LDADD) $(LIBS)
vortex-omr-server$(EXEEXT): $(vortex_omr_server_OBJECTS) $(vortex_omr_server_DEPENDENCIES) 
	@rm -f vortex-omr-server$(EXEEXT)
	$(LINK) $(vortex_omr_server_OBJECTS) $(vortex_omr_server_LDADD) $(LIBS)
vortex-pull-listener$(EXEEXT): $(vortex_pull_listener_OBJECTS) $(vortex_pull_listener_DEPENDENCIES) 
	@rm -f vortex-pull-listener$(EXEEXT)
	$(LINK) $(vortex_pull_listener_OBJECTS) $(vortex_pull_listener_LDADD) $(LIBS)
vortex-regression-client$(EXEEXT): $(vortex_regression_client_OBJECTS) $(vortex_regression_client_DEPENDENCIES) 
	@rm -f vortex-regression-client$(EXEEXT)
	$(LINK) $(vortex_regression_client_OBJECTS) $(vortex_regression_client_LDADD) $(LIBS)
vortex-regression-listener$(EXEEXT): $(vortex_regression_listener_OBJECTS) $(vortex_regression_listener_DEPENDENCIES) 
	@rm -f vortex-regression-listener$(EXEEXT)
	$(LINK) $(vortex_regression_listener_OBJECTS) $(vortex_regression_listener_LDADD) $(LIBS)
vortex-sasl-listener$(EXEEXT): $(vortex_sasl_listener_OBJECTS) $(vortex_sasl_listener_DEPENDENCIES) 
	@rm -f vortex-sasl-listener$(EXEEXT)
	$(LINK) $(vortex_sasl_listener_OBJECTS) $(vortex_sasl_listener_LDADD) $(LIBS)
vortex-server-without-cbs$(EXEEXT): $(vortex_server_without_cbs_OBJECTS) $(vortex_server_without_cbs_DEPENDENCIES) 
	@rm -f vortex-server-without-cbs$(EXEEXT)
	$(LINK) $(vortex_server_without_cbs_OBJECTS) $(vortex_server_without_cbs_LDADD) $(LIBS)
vortex-simple-client$(EXEEXT): $(vortex_simple_client_OBJECTS) $(vortex_simple_client_DEPENDENCIES) 
	@rm -f vortex-simple-client$(EXEEXT)
	$(LINK) $(vortex_simple_client_OBJECTS) $(vortex_simple_client_LDADD) $(LIBS)
vortex-simple-listener$(EXEEXT): $(vortex_simple_listener_OBJECTS) $(vortex_simple_listener_DEPENDENCIES) 
	@rm -f vortex-simple-listener$(EXEEXT)
	$(LINK) $(vortex_simple_listener_OBJECTS) $(vortex_simple_listener_LDADD) $(LIBS)
vortex-tls-listener$(EXEEXT): $(vortex_tls_listener_OBJECTS) $(vortex_tls_listener_DEPENDENCIES) 
	@rm -f vortex-tls-listener$(EXEEXT)
	$(LINK) $(vortex_tls_listener_OBJECTS) $(vortex_tls_listener_LDADD) $(LIBS)
vortex-xml-rpc-listener$(EXEEXT): $(vortex_xml_rpc_listener_OBJECTS) $(vortex_xml_rpc_listener_DEPENDENCIES) 
	@rm -f vortex-xml-rpc-listener$(EXEEXT)
	$(LINK) $(vortex_xml_rpc_listener_OBJECTS) $(vortex_xml_rpc_listener_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/service_dispatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_array_itemarray_xml_rpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_double_sum_double_double.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_struct_values_values.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_the_bool_1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_the_bool_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_the_string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_operate_int_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_struct_item_xml_rpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_struct_node_xml_rpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_struct_values_xml_rpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sum2_int_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sum_int_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xml_rpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-client-connections.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-client-without-cbs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-close-listeners.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-file-transfer-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-file-transfer-server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-omr-server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-pull-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-regression-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-regression-common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-regression-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-sasl-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-server-without-cbs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-simple-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-simple-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-tls-listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vortex-xml-rpc-listener.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-certfilesDATA: $(certfiles_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(certfilesdir)" || $(MKDIR_P) "$(DESTDIR)$(certfilesdir)"
	@list='$(certfiles_DATA)'; test -n "$(certfilesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(certfilesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(certfilesdir)" || exit $$?; \
	done

uninstall-certfilesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(certfiles_DATA)'; test -n "$(certfilesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(certfilesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(certfilesdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(certfilesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-certfilesDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-certfilesDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-certfilesDATA install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-certfilesDATA

prepare_files:
	test -e vortex-regression-client.c || cp $(vortex_test_files)  .

# build xml-rpc source files required by the regression test.
test_types.h:
	$(top_builddir)/xml-rpc-gen/xml-rpc-gen-1.1 --out-server-dir . --out-stub-dir .  vortex-regression-client.idl --disable-autoconf --disable-main-file

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
