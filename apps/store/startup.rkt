#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 1986 0 17 3 22 #"#! /usr/bin/env racket"
0 0 4 29 1 #"\n"
0 0 26 3 17 #"#lang racket/base"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 19 3 13 #"\"motiles.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 2 #"\"e"
0 0 19 3 1 #"n"
0 0 19 3 1 #"v"
0 0 19 3 6 #"s.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 19 #"\"message-types.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 12 #"\"config.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 17 #"\"../../ui/ws.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 33 #"\"../../peer/src/net/tcp-peer.rkt\""
0 0 4 3 9 #"         "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 34 #"\"../../Motile/persistent/hash.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 36 #"\"../../Motile/compile/serialize.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 36 #"\"../../Motile/generate/baseline.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 30 #"\"../../Motile/actor/actor.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 29 #"\"../../Motile/actor/curl.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 9 #"prefix-in"
0 0 4 3 1 #" "
0 0 14 3 5 #"base:"
0 0 4 3 1 #" "
0 0 19 3 29 #"\"../../Motile/actor/send.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 33 #"\"../../Motile/actor/delivery.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 32 #"\"../../Motile/actor/promise.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 34 #"\"../../Motile/actor/jumpstart.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 31 #"\"../../Motile/actor/island.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 33 #"\"../../Motile/actor/locative.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 19 3 31 #"\"../../Motile/actor/logger.rkt\""
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 15 #"racket/function"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 11 #"racket/list"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 12 #"racket/match"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 15 #"racket/contract"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 11 #"racket/dict"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 20 #"racket/async-channel"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"all-defined-out"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 77
(
 #"; argsassoc: string [call: string -> any] [no-val: any] [default: an"
 #"y] -> any"
) 0 0 4 29 1 #"\n"
0 0 17 3 60
#"; separates the provided command line arguments of the form:"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";             key1=val1 key2=val2 key3"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #"; if the provided key name is present and has a value, returns `call"
 #"' applied to that value."
) 0 0 4 29 1 #"\n"
0 0 17 3 74
(
 #"; if the provided key name is present but has no value, returns `def"
 #"ault'."
) 0 0 4 29 1 #"\n"
0 0 17 3 60
#"; if the provided key name is not present, returns `no-val'."
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"CLargs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"curry"
0 0 4 3 1 #" "
0 0 14 3 12 #"regexp-split"
0 0 4 3 1 #" "
0 0 19 3 6 #"#rx\"=\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"vector->list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 30 #"current-command-line-arguments"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"argsassoc"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 6 #"#:call"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 4 #"call"
0 0 4 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 1 #"]"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 8 #"#:no-val"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 6 #"no-val"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 9 #"#:default"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 15 3 7 #"default"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"assoc"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 14 3 6 #"CLargs"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"call"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 15 3 7 #"default"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"no-val"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"meta-has-any?"
0 0 4 3 1 #" "
0 0 14 3 4 #"meta"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 2 #"vs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"ormap"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"k.v"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"k.v"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash/ref"
0 0 4 3 1 #" "
0 0 14 3 4 #"meta"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"k.v"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 2 #"vs"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"metadata->benv"
0 0 4 3 1 #" "
0 0 14 3 8 #"metadata"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 14 3 15 #"MULTIMEDIA-BASE"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"->boolean"
0 0 4 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 4 #"expr"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 2 #"#t"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"curl/known-public?"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 4 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 4 #"or/c"
0 0 4 3 1 #" "
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 6 #"bytes?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 26 #"exact-nonnegative-integer?"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 2 #"->"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"->boolean"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"dict-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"PUBLICS"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"string->bytes/utf-8"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"curl/get-public"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 4 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 2 #"(("
0 0 14 3 4 #"or/c"
0 0 4 3 1 #" "
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 6 #"bytes?"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 26 #"exact-nonnegative-integer?"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 2 #"->"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 5 #"curl?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 18 #"motile/deserialize"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"dict-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"PUBLICS"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"string->bytes/utf-8"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"host"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 14 3 4 #"port"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 36 #"make-root/get-public/register-public"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"root"
0 0 4 3 1 #" "
0 0 14 3 13 #"root-locative"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"actor/root/new"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"public-locative"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"locative/cons/any"
0 0 4 3 1 #" "
0 0 14 3 13 #"root-locative"
0 0 4 3 1 #" "
0 0 14 3 11 #"A-LONG-TIME"
0 0 4 3 1 #" "
0 0 14 3 11 #"A-LONG-TIME"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"locative/id!"
0 0 4 3 1 #" "
0 0 14 3 15 #"public-locative"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 15 3 6 #"public"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"public-curl"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"curl/new/any"
0 0 4 3 1 #" "
0 0 14 3 15 #"public-locative"
0 0 4 3 1 #" "
0 0 14 3 4 #"null"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 16 #"motile/serialize"
0 0 4 3 1 #" "
0 0 14 3 11 #"public-curl"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 23 #"; put in exports table."
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 4 3 1 #" "
0 0 14 3 4 #"root"
0 0 4 3 1 #" "
0 0 14 3 13 #"root-locative"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 15 #"public-locative"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"curl/known-public?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"island/address/dns"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"island/address/port"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 15 #"curl/get-public"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"island/address/dns"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"island/address/port"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 14 3 11 #"public-curl"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 38 #"#|(for/list ([i (in-range 5000 5020)])"
0 0 17 29 1 #"\n"
0 0 17 3 86
(
 #"  (this/island (island/address/new #\"abcdefghijklmnopqrstuvwxyz\" #"
 #"\"128.195.59.227\" i))"
) 0 0 17 29 1 #"\n"
0 0 17 3 85
(
 #"  (define-values (root rootl publicl publicc) (make-root/get-public/"
 #"register-public))"
) 0 0 17 29 1 #"\n"
0 0 17 3 104
(
 #" `((,(island/address/dns (this/island)) . ,i) . (,(motile/serialize "
 #"(curl/new/any publicl null #f)))))|#"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 103
(
 #";; host and port to listen on. use to start the comm layer below, de"
 #"signating root to receive incoming."
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"*LISTENING-ON*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"argsassoc"
0 0 4 3 1 #" "
0 0 19 3 8 #"\"--host\""
0 0 4 3 1 #" "
0 0 22 3 8 #"#:no-val"
0 0 4 3 1 #" "
0 0 14 3 11 #"*LOCALHOST*"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"*LOCALPORT*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"argsassoc"
0 0 4 3 1 #" "
0 0 19 3 8 #"\"--port\""
0 0 4 3 1 #" "
0 0 22 3 8 #"#:no-val"
0 0 4 3 1 #" "
0 0 20 3 4 #"5000"
0 0 4 3 1 #" "
0 0 22 3 6 #"#:call"
0 0 4 3 1 #" "
0 0 14 3 14 #"string->number"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"ADDRESS-HERE"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"island/address/new"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 19 3 29 #"#\"abcdefghijklmnopqrstuvwxyz\""
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 19 #"string->bytes/utf-8"
0 0 4 3 1 #" "
0 0 14 3 14 #"*LISTENING-ON*"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 11 #"*LOCALPORT*"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 4 3 1 #" "
0 0 14 3 12 #"ADDRESS-HERE"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 4 3 1 #" "
0 0 19 3 23 #"\"Island starting: ~s~n\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"this/island"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 17 3 17 #"; make root actor"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"ROOT"
0 0 4 3 1 #" "
0 0 14 3 13 #"ROOT-LOCATIVE"
0 0 4 3 1 #" "
0 0 14 3 15 #"PUBLIC-LOCATIVE"
0 0 4 3 1 #" "
0 0 14 3 11 #"PUBLIC-CURL"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 36 #"make-root/get-public/register-public"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 17 3 35 #"; deliver incoming messages to ROOT"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"COMM-thd"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"run-tcp-peer"
0 0 4 3 1 #" "
0 0 14 3 14 #"*LISTENING-ON*"
0 0 4 3 1 #" "
0 0 14 3 11 #"*LOCALPORT*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"actor/thread"
0 0 4 3 1 #" "
0 0 14 3 4 #"ROOT"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 10 #"#:encrypt?"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 29 #"base:set-inter-island-router!"
0 0 4 3 1 #" "
0 0 14 3 8 #"COMM-thd"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 18 #"define-wrapper-for"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"g"
0 0 4 3 1 #" "
0 0 14 3 7 #"precall"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 7 #"precall"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 19 #"define-wrapper-for*"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"g"
0 0 4 3 1 #" "
0 0 14 3 8 #"postcall"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"g"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 8 #"postcall"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 18 #"; nickname -> node"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-edges"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 51 #"; (nickname . (nickname or island-address)) -> node"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"sending-diagram"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"add-new-edge"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 6 #"origin"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"unless"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"hash-has-key?"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-edges"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 6 #"origin"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"when"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 6 #"origin"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"edge"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"new-edge"
0 0 4 3 1 #" "
0 0 14 3 15 #"sending-diagram"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 6 #"origin"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-edges"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 6 #"origin"
0 0 4 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"edge"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 17 3 3 #";;("
0 0 17 3 8 #"ui-send!"
0 0 17 3 1 #" "
0 0 17 3 2 #"ui"
0 0 17 3 1 #" "
0 0 17 3 5 #"edge)"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #";this is where we can tell the ui things"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"my-root-loop"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 23 #"ui-notification-channel"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 3 #"tre"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"thread-receive-evt"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sync"
0 0 4 3 1 #" "
0 0 14 3 3 #"tre"
0 0 4 3 1 #" "
0 0 14 3 23 #"ui-notification-channel"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"amsg"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"tre"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"thread-receive"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 31 #";(define amsg (thread-receive))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 4 3 1 #" "
0 0 14 3 4 #"amsg"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 58
#";; spawn format, to be solely directed at the public curl."
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"vector"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"curry"
0 0 4 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 11 #"PUBLIC-CURL"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"pcurl"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"match:spawn"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 8 #"metadata"
0 0 4 3 1 #" "
0 0 14 3 5 #"reply"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"metadata-ref"
0 0 4 3 1 #" "
0 0 14 3 8 #"metadata"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"nick\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"nonamegiven"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"actor"
0 0 4 3 1 #" "
0 0 14 3 9 #"actor/loc"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"actor/new"
0 0 4 3 1 #" "
0 0 14 3 4 #"ROOT"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 50 #"; put a new node to represent the new computation."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"this-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"new-node"
0 0 4 3 1 #" "
0 0 14 3 15 #"sending-diagram"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 24 #"; place in the map above"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 4 3 1 #" "
0 0 14 3 9 #"this-node"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 20 #"; send to ui itself."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 66
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;("
0 0 17 3 8 #"ui-send!"
0 0 17 3 1 #" "
0 0 17 3 2 #"ui"
0 0 17 3 11 #" this-node)"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 79
(
 #"; a producer of functions that count and send a data point every N i"
 #"nvocations."
) 0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-counter"
0 0 4 3 1 #" "
0 0 14 3 13 #"thing-counted"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"N"
0 0 4 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"count"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"this-chart"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 1 #"_"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 5 #"count"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 5 #"count"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"when"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"zero?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"modulo"
0 0 4 3 1 #" "
0 0 14 3 5 #"count"
0 0 4 3 1 #" "
0 0 14 3 1 #"N"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 6 #"unless"
0 0 4 3 1 #" "
0 0 14 3 10 #"this-chart"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"this-chart"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-chart"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"line"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 4 3 1 #" "
0 0 19 3 16 #"\"~a count of ~a\""
0 0 4 3 1 #" "
0 0 14 3 13 #"thing-counted"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"total\""
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 8          52 4 2 #"(\0"
2 #")\0"
9 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"ui-send!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ui"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"this"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 5 #"chart"
7 #"wxtext\0"
3 1 #")"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 17 3 3 #";;("
0 0 17 3 8 #"ui-send!"
0 0 17 3 1 #" "
0 0 17 3 2 #"ui"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 12 #"plot-a-point"
0 0 17 3 1 #" "
0 0 17 3 10 #"this-chart"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 28 #"current-inexact-milliseconds"
0 0 17 3 1 #")"
0 0 17 3 8 #" count))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 79
(
 #"; a producer of functions that create edges between `this-node' and "
 #"other nodes"
) 0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 61
#"; when this computation sends messages to other computations."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"make-edge-for"
0 0 4 3 1 #" "
0 0 14 3 11 #"target-curl"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 11 #"curl/intra?"
0 0 4 3 1 #" "
0 0 14 3 11 #"target-curl"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 28 #"; the receiver is also here."
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 90
(
 #"; we should have another node for it on the diagram already (since i"
 #"t was already created)"
) 0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 10 #"; find it."
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"target-actor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"actor/nickname"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"locative/actor"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"curl/id"
0 0 4 3 1 #" "
0 0 14 3 11 #"target-curl"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 43 #"; now that we have both nodes draw the edge"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 30 #"; (if the edge doesn't exist.)"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 12 #"add-new-edge"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 4 3 1 #" "
0 0 14 3 12 #"target-actor"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 17 3 13 #"; off island."
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"curl/island"
0 0 4 3 1 #" "
0 0 14 3 11 #"target-curl"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 34 #";(displayln target-island-address)"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 62
#"; make sure we have a node for the other island on the diagram"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 6 #"unless"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"hash-has-key?"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"other-island-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"new-node"
0 0 4 3 1 #" "
0 0 14 3 15 #"sending-diagram"
0 0 4 29 1 #"\n"
0 0 4 3 52 #"                                                    "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 29 1 #"\n"
0 0 4 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 19 #"bytes->string/utf-8"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"island/address/dns"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 53 #"                                                     "
0 0 19 3 3 #"\":\""
0 0 4 29 1 #"\n"
0 0 4 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 14 #"number->string"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"island/address/port"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 4 3 1 #" "
0 0 14 3 21 #"sending-diagram-nodes"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 4 3 1 #" "
0 0 14 3 17 #"other-island-node"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 17 3 11 #";;(ui-send!"
0 0 17 3 1 #" "
0 0 17 3 2 #"ui"
0 0 17 3 19 #" other-island-node)"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 12 #"add-new-edge"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 4 3 1 #" "
0 0 14 3 21 #"target-island-address"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"draw-edge"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 8 #"whatever"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 23 #"base:curl/send/multiple"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 47 #"; curl/send/multiple's arguments are backwards."
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 63
#"; `m' is actually a list of curls; `c' is actually the message."
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 13 #"make-edge-for"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 13 #"make-edge-for"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 43 #"; make a counter for curl/send and friends."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 56 #"; counter is shared between all the curl/send* functions"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"counter-for-sends"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-counter"
0 0 4 3 1 #" "
0 0 19 3 9 #"\"sending\""
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 55 #"; glue both of the curl/send instrumentations together."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 23 #"sending-instrumentation"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 17 #"counter-for-sends"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 9 #"draw-edge"
0 0 4 3 1 #" "
0 0 14 3 2 #"xs"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 39 #"                                       "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 18 #"define-wrapper-for"
0 0 4 3 1 #" "
0 0 14 3 14 #"base:curl/send"
0 0 4 3 1 #" "
0 0 14 3 9 #"curl/send"
0 0 4 3 1 #" "
0 0 14 3 23 #"sending-instrumentation"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 18 #"define-wrapper-for"
0 0 4 3 1 #" "
0 0 14 3 23 #"base:curl/send/multiple"
0 0 4 3 1 #" "
0 0 14 3 18 #"curl/send/multiple"
0 0 4 3 1 #" "
0 0 14 3 23 #"sending-instrumentation"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 18 #"define-wrapper-for"
0 0 4 3 1 #" "
0 0 14 3 22 #"base:curl/send/promise"
0 0 4 3 1 #" "
0 0 14 3 17 #"curl/send/promise"
0 0 4 3 1 #" "
0 0 14 3 23 #"sending-instrumentation"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"benv"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"++"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"metadata->benv"
0 0 4 3 1 #" "
0 0 14 3 8 #"metadata"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 20 #"global-value-defines"
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 4 3 1 #" "
0 0 14 3 11 #"PUBLIC-CURL"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 14 #"global-defines"
0 0 4 3 1 #" "
0 0 14 3 13 #"this/locative"
0 0 4 3 1 #" "
0 0 14 3 15 #"curl/get-public"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 17 3 47 #"; overwrite old versions with wrapped versions."
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 14 3 9 #"curl/send"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 14 3 17 #"curl/send/promise"
0 0 4 29 1 #"\n"
0 0 4 3 38 #"                                      "
0 0 14 3 18 #"curl/send/multiple"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 96
(
 #"; todo: use `curl/send` instead of `curl/send*` (fix name shadowing "
 #"problem in macro definition)"
) 0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 15 #"actor/jumpstart"
0 0 4 3 1 #" "
0 0 14 3 5 #"actor"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 4 3 1 #" "
0 0 19 3 22 #"\"Actor starting: ~s~n\""
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"ret"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"motile/call"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 4 #"benv"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 4 3 1 #" "
0 0 19 3 20 #"\"Actor ending: ~s~n\""
0 0 4 3 1 #" "
0 0 14 3 12 #"the-nickname"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 14 3 3 #"ret"
0 0 22 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 58
#";; a delivery from off-island into one of the actors here."
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"?"
0 0 4 3 1 #" "
0 0 14 3 9 #"delivery?"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 17 3 38 #"; send count deprecation happens here."
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 13 #"with-handlers"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"exn?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 17 #"base:curl/forward"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 4 3 1 #" "
0 0 19 3 29 #"\"Root: discarding a message:\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 4 3 1 #" "
0 0 14 3 4 #"amsg"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"my-root-loop"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 23 #"ui-notification-channel"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 16 #"serve-browser-ui"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"argsassoc"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"--ui\""
0 0 4 3 1 #" "
0 0 22 3 9 #"#:default"
0 0 4 3 1 #" "
0 0 20 3 4 #"8000"
0 0 4 3 1 #" "
0 0 22 3 8 #"#:no-val"
0 0 4 3 1 #" "
0 0 20 3 4 #"8000"
0 0 4 3 1 #" "
0 0 22 3 6 #"#:call"
0 0 4 3 1 #" "
0 0 14 3 14 #"string->number"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";;; start the root chieftain up."
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"actor/jumpstart"
0 0 4 3 1 #" "
0 0 14 3 4 #"ROOT"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 24 #"                        "
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"open-a-tab/synch"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 2 #"ac"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"make-async-channel"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"open-a-tab"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"json"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"async-channel-put"
0 0 4 3 1 #" "
0 0 14 3 2 #"ac"
0 0 4 3 1 #" "
0 0 14 3 4 #"json"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 2 #"ac"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 13 #"define-values"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"ui"
0 0 4 3 1 #" "
0 0 14 3 23 #"ui-notification-channel"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"open-a-tab/synch"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 21 #"ui-wait-for-readiness"
0 0 4 3 1 #" "
0 0 14 3 2 #"ui"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 10 #"PROMISSARY"
0 0 4 3 1 #" "
0 0 14 3 4 #"ROOT"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 8 #"send-div"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"new-div"
0 0 4 3 1 #" "
0 0 19 3 8 #"\"store!\""
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 8 #"ui-send!"
0 0 19 3 1 #" "
0 0 14 3 2 #"ui"
0 0 19 3 1 #" "
0 0 14 3 8 #"send-div"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                        "
0 0 17 3 7 #";(set! "
0 0 17 3 15 #"sending-diagram"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 11 #"new-diagram"
0 0 17 3 11 #" 1200 900))"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                        "
0 0 17 3 2 #";("
0 0 17 3 8 #"ui-send!"
0 0 17 3 20 #" ui sending-diagram)"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                        "
0 0 17 3 50 #"; put a new node to represent the new computation."
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                        "
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 9 #"this-node"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 8 #"new-node"
0 0 17 3 18 #" sending-diagram \""
0 0 17 3 7 #"root\"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 24 #"; place in the map above"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #";("
0 0 17 3 9 #"hash-set!"
0 0 17 3 1 #" "
0 0 17 3 21 #"sending-diagram-nodes"
0 0 17 3 1 #" "
0 0 17 3 16 #"'root this-node)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 20 #"; send to ui itself."
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #";("
0 0 17 3 8 #"ui-send!"
0 0 17 3 14 #" ui this-node)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 12 #"my-root-loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"ui"
0 0 24 3 1 #" "
0 0 14 3 23 #"ui-notification-channel"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 14 #"semaphore-wait"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-semaphore"
0 0 22 3 2 #"))"
0           0
